
import tensorflow as tf
from tensorflow.keras.layers import Dense, Input
from tensorflow.keras.models import Model

# Create sample data
X_train_regression = ...  # Your regression input data
y_train_regression = ...  # Your regression target data
X_train_classification = ...  # Your classification input data
y_train_classification = ...  # Your classification target data

# Define model architecture
input_shape = (X_train_regression.shape[1],)
input_layer = Input(shape=input_shape)
dense1_regression = Dense(64, activation='relu')(input_layer)
dense2_regression = Dense(32, activation='relu')(dense1_regression)
output_regression = Dense(1, name='regression')(dense2_regression)

dense1_classification = Dense(64, activation='relu')(input_layer)
dense2_classification = Dense(32, activation='relu')(dense1_classification)
output_classification = Dense(num_classes, activation='softmax', name='classification')(dense2_classification)

# Define model
model = Model(inputs=input_layer, outputs=[output_regression, output_classification])

# Compile model
model.compile(optimizer='adam',
              loss={'regression': 'mean_squared_error', 'classification': 'categorical_crossentropy'},
              metrics={'regression': 'mae', 'classification': 'accuracy'})

# Train model
model.fit(X_train_regression, {'regression': y_train_regression, 'classification': y_train_classification}, epochs=10, batch_size=32)
